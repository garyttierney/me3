#!/bin/bash

set -x

version=$(cargo pkgid -p me3-mod-host | cut -d '@' -f2)
version=${version%"-prerelease"}
IFS="." read -r -a v <<<"$version"
((v[1]--))
tag_name="v$version"
prev_tag_name="v${v[0]}.${v[1]}.${v[2]}"

if git rev-parse "$tag_name" >/dev/null 2>&1; then
    git tag -d "$tag_name"
fi

release_notes=$(git cliff --strip all "$prev_tag_name..HEAD")

git branch -m "release-$tag_name" -f
git cliff --tag "$tag_name" -o CHANGELOG.md

sed -i "
/ (Latest)/{
  i\\
        - ${tag_name} (Latest)
  s/ (Latest)//
}
" .github/ISSUE_TEMPLATE/bug-report.yml

tag_sha=$(git rev-parse --verify HEAD)
read -r -d '' tag_command_template <<'EOF'



### Create and publish the tag:

```
./releng/bin/create-release "$TAG_SHA"
```
EOF

cargo set-version "$version"
cargo update
git commit -am "release: $version"

echo "$tag_command_template"
tag_command=$(TAG_NAME="$tag_name" TAG_SHA="$tag_sha" envsubst <<<"$tag_command_template")

IFS="." read -r -a v <<<"$version"
((v[1]++))
new_version="${v[0]}.${v[1]}.${v[2]}"

cargo set-version "${v[0]}.${v[1]}.${v[2]}-prerelease"
cargo update
git commit -am "chore: start $new_version development"

if [ -n "$RELEASE_PUSH" ]; then
    git push origin "HEAD:release-$tag_name" --force
    pr_body=$(printf '%s \n\n %s' "$release_notes" "$tag_command")
    if ! gh pr view; then
        gh pr create -B main -b "$pr_body" --title "chore(release): $version"
    else
        gh pr edit -B main -b "$pr_body" --title "chore(release): $version"
    fi
fi
