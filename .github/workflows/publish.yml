on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
name: Publishing
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-installer:
    name: Installer
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version}}
    permissions:
      contents: read
      actions: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b
        with:
          toolchain: nightly
          targets: x86_64-pc-windows-msvc,x86_64-unknown-linux-musl
      - uses: ./.github/actions/setup-windows-toolchain
      - name: Install musl-tools
        run: sudo apt-get install --yes musl-tools
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          shared-key: me3-build
          save-if: ${{ github.event_name == 'push' }}
      - name: Install NSIS + wkhtmltopdf
        run: |
          sudo apt-get install nsis wkhtmltopdf
      - name: Install pandoc
        uses: pandoc/actions/setup@54978b2465cef52a89f0e50a71d1397b1c25b469 # v1.1.0
        with:
          version: 2.19
      - run: |
          echo "version=$(cargo pkgid -p me3-mod-host | cut -d '@' -f2)" >> $GITHUB_OUTPUT
        id: get_version
        shell: bash

      - name: Create distributions
        run: |
          make all
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: me3-artifacts
          path: |
            out/me3_installer.exe
            out/me3-windows-amd64.zip
            out/me3-linux-amd64.tar.gz

  test-windows:
    name: End-to-end tests (Windows)
    needs:
      - build-installer
    runs-on: windows-latest
    permissions:
      actions: read
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: audit

      - name: Download installer
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: me3-artifacts
      - run: ls -R
      - run: ./me3_installer.exe /S

      - run: |
          Import-Module "$env:ChocolateyInstall/helpers/chocolateyInstaller.psm1"
          refreshenv
          me3.exe info
          me3.exe profile create -g er my-new-profile
          me3.exe profile list
          me3.exe profile show my-new-profile
        shell: pwsh
