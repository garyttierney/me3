name: Checks
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUSTC_BOOTSTRAP: 1
  RUST_BACKTRACE: 1
  RUSTUP_MAX_RETRIES: 10
  CLICOLOR: 1

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  check-release-status:
    name: Check if release needs published
    runs-on: ubuntu-latest
    permissions:
      contents: write # needed for visibility of draft releases
    steps:
      - run: echo "version=${BRANCH##*-}" >> $GITHUB_OUTPUT
        id: get-version
        env:
          BRANCH: ${{ github.head_ref }}
        if: startsWith(github.head_ref, 'release-')

      - run: |
          is_draft=$(gh release view -R garyttierney/me3 $VERSION --json 'isDraft' --jq '.isDraft')
          if [ "$is_draft" = "true" ]; then
            echo "Release is still in draft status"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ steps.get-version.outputs.version }}
        if: startsWith(github.head_ref, 'release-')

  check-spelling:
    name: Check spelling
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout Actions Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Spell Check Repo
        uses: crate-ci/typos@85f62a8a84f939ae994ab3763f01a0296d61a7ee # v1.36.2
  check-dead-links:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: tcort/github-action-markdown-link-check@a800ad5f1c35bf61987946fd31c15726a1c9f2ba # v1.1.0

  check_if_config_schema_up_to_date:
    name: Check if config schema is up to date
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Setup | Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          shared-key: me3-build
          save-if: false

      - name: Run | Generate Schema
        run: cargo run --locked --package me3-mod-protocol --bin schema > schemas/mod-profile.json

      - name: Check | Detect Changes
        run: git diff --exit-code schemas/mod-profile.json

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      security-events: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: ./.github/actions/setup-windows-toolchain
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          shared-key: me3-build
          save-if: false
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
        with:
          toolchain: stable
          targets: x86_64-pc-windows-msvc
          components: clippy

      - uses: taiki-e/install-action@9ca1734d8940023f074414ee621fd530c4ce10f2 # v2.55.3
        with:
          tool: clippy-sarif, sarif-fmt
      - run: cargo clippy --workspace --message-format=json -- -Aunused | clippy-sarif | tee results.sarif | sarif-fmt
        shell: bash

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@192325c86100d080feab897ff886c34abd4c83a3 # v3.29.5
        with:
          sarif_file: results.sarif

  fmt:
    permissions:
      contents: read
    name: Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9
        with:
          toolchain: stable
          components: rustfmt
          targets: x86_64-pc-windows-msvc
      - run: cargo fmt --all --check
