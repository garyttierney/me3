on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
name: CI
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    name: Tests
    strategy:
      matrix:
        os:
          - windows-latest
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b
        with:
          toolchain: nightly
          targets: x86_64-pc-windows-msvc
      - uses: ./.github/actions/setup-windows-toolchain
        if: matrix.os == 'ubuntu-latest'
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          shared-key: me3-build
          save-if: false
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@9ca1734d8940023f074414ee621fd530c4ce10f2 # v2.55.3
        with:
          tool: cargo-llvm-cov,cargo-nextest
      - name: Build | Test
        run: |
          cargo llvm-cov --workspace --locked nextest
          cargo llvm-cov --locked report --codecov --output-path codecov.json
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          files: ./target/nextest/default/junit.xml
          name: me3-windows-test-results
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.os }}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          files: codecov.json
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: ${{ matrix.os }}
        if: ${{ !cancelled() }}
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
      id-token: write
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2   
      - uses: dtolnay/rust-toolchain@b3b07ba8b418998c39fb20f53e8b695cdcc8de1b
        with:
          toolchain: nightly
          targets: x86_64-pc-windows-msvc,x86_64-unknown-linux-gnu

      - uses: ./.github/actions/setup-windows-toolchain
      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
        with:
          shared-key: me3-build
          save-if: ${{ github.event_name == 'push' }}

      - name: Install pandoc
        uses: pandoc/actions/setup@86321b6dd4675f5014c611e05088e10d4939e09e # v1.1.1
        with:
          version: 2.19

      - name: Create distributions and installer
        run: |
          make all

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: me3-artifacts
          path: |
            installer.sh
            out/me3_installer.exe
            out/me3-windows-amd64.zip
            out/me3-linux-amd64.tar.gz

  test-windows:
    name: End-to-end tests (Windows)
    needs:
      - build
    runs-on: windows-latest
    permissions:
      actions: read
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Download installer
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: me3-artifacts
      - run: ls -R
      - run: ./out/me3_installer.exe /S

      - run: |
          Import-Module "$env:ChocolateyInstall/helpers/chocolateyInstaller.psm1"
          refreshenv
          me3.exe info
          me3.exe profile create -g er my-new-profile
          me3.exe profile list
          me3.exe profile show my-new-profile
        shell: pwsh

  test-linux:
    name: End-to-end tests (Linux)
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Download installer
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: me3-artifacts
      - run: ls -R
      - run: chmod +x ./installer.sh; ./installer.sh out/me3-linux-amd64.tar.gz

      - run: |
          export PATH="$HOME/.local/bin:$PATH"

          me3 info
          me3 profile create -g er my-new-profile
          me3 profile list
          me3 profile show my-new-profile
          [[ "$(xdg-mime query default application/x-me3)" == "me3-launch.desktop" ]] || exit 1
        shell: bash
